@use "sass:map";
@use '../settings/settings.scss';

/// Mixin que partiendo de los puntos de ruptura establecidos en el fichero de configuración, genera las clases del sistema de rejilla.
///
/// @argument {map}  $breakpoints [$breakpoints] Mapa establecido en la configuración inicial
/// @requires $breakpoints Mapa que define los puntos de ruptura, gutter y offset
///
/// @example scss
///     @include get-grid();
///
/// @example css
///     @media only screen and (min-width: 0px) {
///      .col-sm-1 {
///        box-sizing: border-box;
///        padding: 0 30px;
///        flex: 0 0 25%;
///        min-width: 25%;
///        max-width: 25%;
///      }
///     }...
///     @media only screen and (min-width: 768px) {
///      .col-md-1 {
///        box-sizing: border-box;
///        padding: 0 30px;
///        flex: 0 0 16.6666666667%;
///        min-width: 16.6666666667%;
///        max-width: 16.6666666667%;
///      }
///     }...
///     @media only screen and (min-width: 1440px) {
///      .col-lg-1 {
///        box-sizing: border-box;
///        padding: 0 30px;
///        flex: 0 0 8.3333333333%;
///        min-width: 8.3333333333%;
///        max-width: 8.3333333333%;
///      }
///     }...
///
///
/// @group grid

@mixin get-grid($breakpoints: settings.$breakpoints) {
  @each $break, $breakpoint in $breakpoints {
    $columns: map.get($breakpoint, "columns");
    @media only screen and (min-width: map.get($breakpoint,"width")) {
      @for $i from 1 through $columns {
        $valor: unquote((100 / $columns * $i) + "%");
        .col-#{$break}-#{$i} {
          box-sizing: border-box;
          padding: 0 map.get($breakpoint, "gutter");
          flex: 0 0 $valor;
          min-width: $valor;
          max-width: $valor;
        }
      }
    }
  }
}

@include get-grid();
